{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"particlesContainer\"];\nexport let EmoticonParticlesComponent = /*#__PURE__*/(() => {\n  class EmoticonParticlesComponent {\n    constructor(renderer) {\n      this.renderer = renderer;\n    }\n    ngOnInit() {\n      this.intervalId = window.setInterval(() => {\n        this.createParticle();\n      }, 500);\n    }\n    ngOnDestroy() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n    }\n    createParticle() {\n      const particle = this.renderer.createElement('div');\n      const emojis = ['🎉', '🎁', '✨'];\n      const emoji = emojis[Math.floor(Math.random() * emojis.length)];\n      this.renderer.setProperty(particle, 'textContent', emoji);\n      this.renderer.addClass(particle, 'particle');\n      this.renderer.setStyle(particle, 'left', `${Math.random() * 100}%`);\n      this.renderer.setStyle(particle, 'fontSize', `${Math.random() * 24 + 12}px`);\n      const animationDuration = Math.random() * 3 + 2; // Duración entre 2 y 5 segundos\n      particle.animate([{\n        transform: 'translateY(-100%)',\n        opacity: 1\n      }, {\n        transform: 'translateY(100vh)',\n        opacity: 0\n      }], {\n        duration: animationDuration * 1000,\n        easing: 'linear',\n        iterations: 1\n      }).onfinish = () => {\n        this.renderer.removeChild(this.particlesContainer.nativeElement, particle);\n      };\n      this.renderer.appendChild(this.particlesContainer.nativeElement, particle);\n    }\n    static #_ = this.ɵfac = function EmoticonParticlesComponent_Factory(t) {\n      return new (t || EmoticonParticlesComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmoticonParticlesComponent,\n      selectors: [[\"app-emoticon-particles\"]],\n      viewQuery: function EmoticonParticlesComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.particlesContainer = _t.first);\n        }\n      },\n      decls: 2,\n      vars: 0,\n      consts: [[1, \"particles-container\"], [\"particlesContainer\", \"\"]],\n      template: function EmoticonParticlesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0, 1);\n        }\n      },\n      styles: [\".particles-container[_ngcontent-%COMP%]{position:relative;width:100%;height:100vh;overflow:hidden}.particle[_ngcontent-%COMP%]{position:absolute;-webkit-user-select:none;user-select:none;will-change:transform,opacity}@keyframes _ngcontent-%COMP%_moveRandomly{0%{transform:translate(0) rotate(0)}25%{transform:translate(-20px,20px) rotate(90deg)}50%{transform:translate(20px,-20px) rotate(180deg)}75%{transform:translate(-20px,-20px) rotate(270deg)}to{transform:translate(20px,20px) rotate(360deg)}}@keyframes _ngcontent-%COMP%_fade{0%{opacity:.5}20%,80%{opacity:1}to{opacity:0}}\"]\n    });\n  }\n  return EmoticonParticlesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}